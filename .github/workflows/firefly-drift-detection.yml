name: "Firefly - Drift Detection CI"

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  drift-detection:
    name: "Terraform & Drift Detection"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Ensure Terraform Directory Exists
        run: mkdir -p terraform

      - name: Install Terraform
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install terraform
          terraform -version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Plan Terraform Changes
        run: terraform plan -out=tfplan
        working-directory: terraform

      - name: Apply Terraform Changes
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        working-directory: terraform

      - name: Install Driftctl
        run: |
          curl -L https://github.com/snyk/driftctl/releases/latest/download/driftctl_linux_amd64 -o driftctl
          chmod +x driftctl
          sudo mv driftctl /usr/local/bin/

      - name: Run Drift Detection
        id: drift
        run: |
          driftctl scan --from tfstate+s3://firefly-drift-detection-bucket/terraform.tfstate --to aws+tf --output json > drift_report.json || true
        working-directory: terraform

      - name: Upload Drift Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: drift-report
          path: terraform/drift_report.json

      - name: Fail on Drift
        if: steps.drift.outcome == 'success'
        run: |
          if grep -q '"summary":.*"total_changes":[^0]' terraform/drift_report.json; then
            echo "⚠️ Drift detected! Stopping execution."
            exit 1
          else
            echo "✅ No drift detected."
          fi
